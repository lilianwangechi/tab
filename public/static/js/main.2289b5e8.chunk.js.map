{"version":3,"sources":["components/Login.js","components/Registration.js","components/Landing.js","components/ItemCard.js","components/TabCard.js","components/CurrentTabs.js","components/DebounceSelect.js","components/NewTab.js","components/CompletedTabCard.js","components/CompletedTabs.js","components/Dashboard.js","components/App.js","index.js"],"names":["Login","onLogin","useState","isLoginVisible","setLoginVisible","email","password","loginInfo","setLoginInfo","setIsLoading","errors","setErrors","handleClose","handleInputChange","e","target","name","value","onClick","title","visible","onCancel","onOk","footer","length","map","err","index","message","type","labelCol","span","wrapperCol","autoComplete","onFinish","fetch","method","headers","body","JSON","stringify","then","r","ok","json","user","Item","label","rules","required","onChange","Password","offset","htmlType","Registration","isRsvpVisible","setRsvpVisible","full_name","password_confirmation","rsvpInfo","setRsvpInfo","Landing","id","src","alt","className","direction","bg","ItemCard","item","handleDelete","price","style","float","size","icon","DeleteOutlined","TabCard","tab","handleDeleteTab","handleSettle","setVisible","isModalVisible","setIsModalVisible","itemName","setItemName","itemValue","setItemValue","Form","useForm","form","items","itemsToDisplay","setItemsToDisplay","newList","filter","console","log","confirm","Modal","participants","users","UserOutlined","ownAmount","reduce","acc","user_id","toFixed","PlusOutlined","tab_id","completed","new_item","success","resetFields","width","step","onConfirm","setTimeout","okText","ExclamationCircleOutlined","content","okType","DollarCircleOutlined","placement","trigger","UsergroupDeleteOutlined","CurrentTabs","Panel","Collapse","tabs","setTabs","useEffect","data","incomplete_tabs","newTabs","header","DebounceSelect","fetchOptions","debounceTimeout","props","fetching","setFetching","options","setOptions","fetchRef","useRef","debounceFetcher","useMemo","debounce","current","fetchId","newOptions","labelInValue","filterOption","onSearch","notFoundContent","NewTab","curr_user","setValue","tabName","setTabName","a","layout","newtab","v","split","indexOf","toString","push","parseInt","handleSubmit2","mode","placeholder","newValue","CompletedTabCard","expenses","forEach","exp","expense","myExp","find","u","otherExp","CompletedTabs","Header","Layout","Content","Sider","Dashboard","setUser","disabled","SmileOutlined","to","path","element","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2289b5e8.chunk.js","sourcesContent":["import { Button, Modal, Form, Input, Alert } from 'antd';\nimport { useState } from 'react';\n\nfunction Login({ onLogin }) {\n    const [isLoginVisible, setLoginVisible] = useState(false)\n    const [loginInfo, setLoginInfo] = useState({\n        email: \"\",\n        password: \"\"\n    })\n    const [isLoading, setIsLoading] = useState(false);\n    const [errors, setErrors] = useState([]);\n    function showLogin() {\n        setLoginVisible(true)\n    }\n    function handleClose() {\n        setLoginVisible(false)\n    }\n    function handleSubmit() {\n        fetch(\"/api/login\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(loginInfo),\n          }).then((r) => {\n            setIsLoading(false);\n            if (r.ok) {\n              r.json().then((user) => onLogin(user));\n            } else {\n              r.json().then((err) => setErrors(err.errors));\n            }\n          });\n    }\n    function handleInputChange(e) {\n        setLoginInfo({\n            ...loginInfo, [e.target.name]:e.target.value\n        })\n    }\n    return (\n        <>\n            <Button onClick={showLogin}>Sign In</Button>\n            <Modal \n                title=\"User Login\" \n                visible={isLoginVisible}\n                onCancel={handleClose}\n                onOk={handleClose}\n                footer={null}\n            >\n                {errors.length>0?\n                <div>\n                    {errors.map((err,index)=>{\n                        return (<Alert key={index} message={err} type=\"error\" />)\n                    })}\n                    <p></p>\n                </div>:null}\n                <Form\n                    name=\"login\"\n                    labelCol={{\n                        span: 6,\n                    }}\n                    wrapperCol={{\n                        span: 16,\n                    }}\n                    autoComplete=\"off\"\n                    onFinish={handleSubmit}\n                >\n                    <Form.Item\n                        label=\"Email\"\n                        name=\"email\"\n                        rules={[\n                        {\n                            required: true,\n                            message: 'Please input your email!',\n                        },\n                        ]}\n                    >\n                        <Input name=\"email\" onChange={handleInputChange} />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[\n                        {\n                            required: true,\n                            message: 'Please input your password!',\n                        },\n                        ]}\n                    >\n                        <Input.Password name=\"password\" onChange={handleInputChange} />\n                    </Form.Item>\n                    <Form.Item\n                        wrapperCol={{\n                        offset: 10,\n                        span: 16,\n                        }}\n                    >\n                        <Button htmlType=\"submit\">\n                        Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </>\n    )\n}\n\nexport default Login","import { Button, Modal, Form, Input, Alert } from 'antd';\nimport { useState } from 'react';\n\nfunction Registration({ onLogin }) {\n    const [isRsvpVisible, setRsvpVisible] = useState(false)\n    const [rsvpInfo, setRsvpInfo] = useState({\n        full_name: \"\",\n        email: \"\",\n        password: \"\",\n        password_confirmation: \"\"\n    })\n    const [errors, setErrors] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    function showRsvp() {\n        setRsvpVisible(true)\n    }\n    function handleClose() {\n        setRsvpVisible(false)\n    }\n    function handleSubmit() {\n        // e.preventDefault()\n        setErrors([]);\n        setIsLoading(true);\n        fetch(\"/api/signup\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(rsvpInfo),\n          }).then((r) => {\n            setIsLoading(false);\n            if (r.ok) {\n              r.json().then((user) => onLogin(user));\n            } else {\n              r.json().then((err) => setErrors(err.errors));\n            }\n          });\n    }\n    function handleInputChange(e) {\n        setRsvpInfo({\n            ...rsvpInfo, [e.target.name]:e.target.value\n        })\n    }\n    return (\n        <>\n            <Button onClick={showRsvp}>Create New Account</Button>\n            <Modal \n                title=\"User Registration\" \n                visible={isRsvpVisible}\n                onCancel={handleClose}\n                onOk={handleClose}\n                footer={null}\n            >\n                {errors&&errors.length>0?\n                <div>\n                    <Alert message={\n                        errors.map((err)=>{\n                            return(\n                                <li>{err}</li>\n                            )\n                        })\n                    } type=\"error\" />\n                    <p></p>\n                </div>:null}\n                <Form\n                    name=\"registration\"\n                    labelCol={{\n                        span: 9,\n                    }}\n                    wrapperCol={{\n                        span: 16,\n                    }}\n                    autoComplete=\"off\"\n                    onFinish={handleSubmit}\n                >\n                    <Form.Item\n                        label=\"Full Name\"\n                        name=\"full_name\"\n                        rules={[\n                        {\n                            required: true,\n                            message: 'Please input your full name!',\n                        },\n                        ]}\n                    >\n                        <Input name=\"full_name\" onChange={handleInputChange} />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Email\"\n                        name=\"email\"\n                        rules={[\n                        {\n                            required: true,\n                            message: 'Please input your email!',\n                        },\n                        ]}\n                        \n                    >\n                        <Input name=\"email\" onChange={handleInputChange} />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[\n                        {\n                            required: true,\n                            message: 'Please input your password!',\n                        },\n                        ]}\n                    >\n                        <Input.Password name=\"password\" onChange={handleInputChange} />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Password Confirmation\"\n                        name=\"passwordconfirm\"\n                        rules={[\n                        {\n                            required: true,\n                            message: 'Please confirm your password!',\n                        },\n                        ]}\n                    >\n                        <Input.Password name=\"password_confirmation\" onChange={handleInputChange}  />\n                    </Form.Item>\n                    <Form.Item\n                        wrapperCol={{\n                        offset: 10,\n                        span: 16,\n                        }}\n                    >\n                        <Button htmlType=\"submit\">\n                        Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </>\n    )\n}\n\nexport default Registration","import { Space } from 'antd';\nimport ParticlesBg from 'particles-bg'\nimport Login from './Login';\nimport Registration from './Registration';\n\nfunction Landing({ onLogin }) {\n\n    return (\n        <>\n            <div id=\"landing\">\n                <img src=\"https://doodleipsum.com/600?i=0e05d2d124e0a86b24727ce6006b739a\" alt=\"Living Area by Irene Falgueras\" />\n                <h1 className=\"animate__animated animate__rubberBand animate__repeat-2\">TAB-TAB-TAB</h1>\n                <p>Spliting bills has never been this easy</p>\n                <Space direction=\"vertical\">\n                    <Login onLogin={onLogin} />\n                    <Registration onLogin={onLogin} />\n                </Space>\n                \n            </div>\n            <ParticlesBg type=\"random\" bg={true} />\n        </>\n    )\n}\n\nexport default Landing","import { Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nfunction ItemCard({ item, handleDelete }) {\n    return (\n    <div>\n        <span id=\"singleitem\">\n            {item.name} - ${item.price}\n            <Button onClick={()=>handleDelete(item.id)} style={{float: 'right'}} size=\"small\" icon={<DeleteOutlined  />} />\n        </span>\n    </div>\n    )\n}\n\nexport default ItemCard","import { Button, Space, Modal, InputNumber, Form, Input, message } from 'antd';\nimport { useState } from 'react';\nimport { PlusOutlined, DeleteOutlined, ExclamationCircleOutlined,  DollarCircleOutlined, UserOutlined, UsergroupDeleteOutlined  } from '@ant-design/icons';\nimport { Popconfirm, Popover, Avatar } from 'antd';\nimport ItemCard from './ItemCard';\n\nfunction TabCard({ tab, user, handleDeleteTab, handleSettle }) {\n  \n    // line 8: state for popconfirm of delete function\n    const [visible, setVisible] = useState(false);\n    const [isModalVisible, setIsModalVisible] = useState(false)\n    const [itemName, setItemName] = useState('')\n    const [itemValue, setItemValue] = useState(0)\n    const [errors, setErrors] = useState([]);\n    const [form] = Form.useForm();\n    const [itemsToDisplay, setItemsToDisplay] = useState(tab.items)\n    const showModal = () => {\n        setIsModalVisible(true);\n      };\n    \n      const handleOk = () => {\n        setIsModalVisible(false);\n      };\n    \n      const handleCancel = () => {\n        setIsModalVisible(false);\n      };\n      function handleDelete(id) {\n          fetch(`/api/items/${id}`,{\n              method:\"DELETE\"\n          })\n          .then(r=>{\n            if (r.ok) {\n                let newList = itemsToDisplay.filter((item)=>{\n                    return (item.id!==id)\n                })\n                setItemsToDisplay(newList)\n            }\n          })\n      }\n      const success = () => {\n        message.success('New Item Created!');\n      };\n      console.log(itemsToDisplay)\n      function handleSubmit() {\n        fetch(\"/api/items\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                tab_id: tab.id,\n                name: itemName,\n                price: itemValue,\n                completed: false,\n                user_id: user.id\n            }),\n        }).then(r=>{\n                if (r.ok) {\n                    r.json().then((new_item=>{\n                        setItemsToDisplay([...itemsToDisplay, new_item])\n                        success()\n                        setIsModalVisible(false)\n                    }))\n                } else {\n                    r.json().then((err)=>setErrors([...errors, err.errors]))\n                }\n            })\n        form.resetFields()\n      }\n    // delete function starts here: \n    const showPopconfirm = () => {\n        setVisible(true);   \n    };\n\n    const handleOkToDelete = () => {\n        setTimeout(() => {\n            setVisible(false);\n        }, 2000);\n        handleDeleteTab(tab.id);\n    };\n\n    const handleCancelDelete = () => {\n        console.log('Clicked cancel button');\n        setVisible(false);\n    };\n\n    const { confirm } = Modal\n    function showConfirm() {\n        confirm({\n            title: \"Are you sure settle this tab?\",\n            icon: <ExclamationCircleOutlined />,\n            content: \"Once you settle, no one will be able to add items and you can see bill splitting result in completed tabs section.\",\n            okText: \"Yes\",\n            okType: \"primary\",\n            onOk(){\n                handleSettle(tab.id)\n            }\n        })\n    }\n    const participants = (\n        <Space direction=\"vertical\">\n            {tab.users.map((user)=>{\n                return (<Space key={user.id}><Avatar icon={<UserOutlined />} />{user.full_name}</Space>)\n            })}\n        </Space>\n    )\n    const ownAmount = (\n        ((itemsToDisplay.reduce(function (acc, item) { return acc+item.price},0)-\n        itemsToDisplay.filter(item=>item.user_id===user.id).reduce(function (acc, item) { return acc+item.price},0))/tab.users.length).toFixed(2)\n    )\n    return (\n        <div id=\"tabcard\">\n            <Space>\n                <Button onClick={showModal}>\n                    <PlusOutlined />\n                    New Item\n                </Button>\n                <Modal title=\"Create New Item\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} footer={null}>\n                    <Form\n                        name=\"newitem\"\n                        form={form}\n                        labelCol={{\n                            span: 6,\n                        }}\n                        wrapperCol={{\n                            span: 16,\n                        }}\n                        autoComplete=\"off\"\n                        onFinish={handleSubmit}\n                    >\n                        <Form.Item\n                            label=\"Name\"\n                            name=\"name\"\n                            rules={[\n                            {\n                                required: true,\n                                message: 'Please input item name!',\n                            },\n                            ]}\n                        >\n                            <Input name=\"name\" onChange={(e)=>{\n                                setItemName(e.target.value)\n                            }} />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"Cost\"\n                            name=\"cost\"\n                            rules={[\n                            {\n                                required: true,\n                                message: 'Please input item cost!',\n                            },\n                            ]}\n                        >\n                            <InputNumber style={{ width: '100%' }} step=\"0.0001\" name=\"cost\" onChange={(value)=>setItemValue(value)} />\n                        </Form.Item>\n                        <Form.Item\n                            wrapperCol={{\n                            offset: 10,\n                            span: 16,\n                            }}\n                        >\n                            <Button htmlType=\"submit\">\n                            Submit\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n                <Popconfirm\n                    title=\"Are you sure you want to delete this tab? All items will be deleted all together. Think twice!!\"\n                    visible={visible}\n                    onConfirm={handleOkToDelete}\n                    onCancel={handleCancelDelete}\n                    okText=\"Yes\"\n                    >\n                    <Button onClick={showPopconfirm}>\n                        <DeleteOutlined  />\n                        Delete Tab\n                    </Button>\n                </Popconfirm>\n                <Button onClick={showConfirm}>\n                    <DollarCircleOutlined />\n                    Settle\n                </Button>\n                <Popover placement=\"bottomLeft\" content={participants} trigger=\"click\">\n                    <Button>\n                        <UsergroupDeleteOutlined />\n                        Participants\n                    </Button>\n                </Popover>\n                You Currently owe:  ${ownAmount}\n            </Space>\n            <div id=\"itemcard\">\n                {itemsToDisplay.length>0? \n                <Space direction=\"vertical\">\n                    {itemsToDisplay.map((item)=>{\n                        return (<ItemCard key={item.id} item={item} handleDelete={handleDelete} />)\n                    })}\n                </Space>:\n                <h2>No item at the moment, please add new items!</h2>}\n            </div>\n        </div>\n    )\n}\n\nexport default TabCard","import { useEffect, useState } from \"react\"\nimport { Collapse, message } from 'antd';\nimport TabCard from \"./TabCard\";\n\nfunction CurrentTabs({ user }) {\n    const { Panel } = Collapse;\n    const [tabs, setTabs] = useState([])\n\n    useEffect(()=>{\n        fetch('/api/tabs').then(r=>r.json()).then(data=>{\n            let incomplete_tabs = data.filter(tab=>{\n                return tab.completed!==true\n            })\n            setTabs(incomplete_tabs)\n        })\n    },[])\n\n    const handleDeleteTab = (id) => {\n        fetch(`/api/tabs/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        })\n        .then(r=>r.json())\n        .then(setTabs(tabs.filter(tab => tab.id !== id)))\n    };\n    const success = () => {\n        message.success('Settle successful, check it out in Completed Tabs');\n      };\n\n    function handleSettle(id) {\n        fetch(`/api/tabs/${id}`,{\n            method: \"PATCH\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                completed: true\n            })\n        }).then(r=>{\n            if (r.ok) {\n                let newTabs = tabs.filter(tab=>{\n                    return tab.id!==id\n                })\n                setTabs(newTabs)\n                success()\n            }\n        })\n    }\n\n    return(\n        <div id=\"currenttabs\">\n            <Collapse>\n                {tabs.map(tab=>{\n                    return (\n                    <Panel header={tab.name} key={tab.id}>\n                        <TabCard user={user} tab={tab} handleDeleteTab={handleDeleteTab} handleSettle={handleSettle}/>\n                    </Panel>)\n                })}\n            </Collapse>\n        </div>\n    )\n}\n\nexport default CurrentTabs","import { Select, Spin } from 'antd';\nimport debounce from 'lodash/debounce';\nimport { useRef, useState, useMemo } from \"react\"\n\nfunction DebounceSelect({ fetchOptions, debounceTimeout = 800, ...props }) {\n  const [fetching, setFetching] = useState(false);\n  const [options, setOptions] = useState([]);\n  const fetchRef = useRef(0);\n  const debounceFetcher = useMemo(() => {\n    const loadOptions = (value) => {\n      fetchRef.current += 1;\n      const fetchId = fetchRef.current;\n      setOptions([]);\n      setFetching(true);\n      fetchOptions(value).then((newOptions) => {\n        if (fetchId !== fetchRef.current) {\n          // for fetch callback order\n          return;\n        }\n\n        setOptions(newOptions);\n        setFetching(false);\n      });\n    };\n\n    return debounce(loadOptions, debounceTimeout);\n  }, [fetchOptions, debounceTimeout]);\n  return (\n    <Select\n      labelInValue\n      size=\"large\"\n      filterOption={false}\n      onSearch={debounceFetcher}\n      notFoundContent={fetching ? <Spin size=\"small\" /> : null}\n      {...props}\n      options={options}\n    />\n  );\n} // Usage of DebounceSelect\n\nexport default DebounceSelect\n\n","import { Form, Input, Button, message } from 'antd';\nimport { useState } from 'react';\nimport DebounceSelect from './DebounceSelect';\n\nfunction NewTab({ curr_user }) {\n    const [value, setValue] = useState([]);\n    const [tabName, setTabName] = useState(\"\")\n    const [form] = Form.useForm();\n    const [errors, setErrors] = useState([]);\n    async function fetchUserList(value) {\n        return fetch(\"/api/users\")\n            .then(r=>r.json())\n            .then((data)=>\n                data.map((user)=>({\n                    label: `${user.id} ${user.full_name}`,\n                    value: user.email\n                }))\n            )\n    }\n    function handleInputChange(e) {\n        setTabName(e.target.value)\n    }\n    console.log(curr_user.id)\n    function handleSubmit() {\n        fetch(\"/api/tabs\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                name: tabName,\n                completed: false\n            }),\n        }).then((r)=>{\n            if (r.ok) {\n                r.json().then(newtab=>{\n                    handleSubmit2(newtab.id)\n                    success()\n                })\n            } else{\n                r.json().then((err)=>setErrors([...errors, err.errors]))\n            }\n        })\n        \n    }\n    const success = () => {\n        message.success('New Tab Created!');\n      };\n\n    function handleSubmit2(tab_id) {\n        const users = value.map(v=>{return(v.label.split(' ')[0])})\n        if (users.indexOf(curr_user.id.toString())===-1) {\n            users.push(curr_user.id.toString())\n        }\n        users.map((user)=>{\n            fetch(\"/api/usertabs\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    user_id: parseInt(user),\n                    tab_id: tab_id\n                }),\n            }).then((r)=>{\n                if (r.ok) {\n                    r.json().then((data=>{console.log(data)}))\n                } else{\n                    r.json().then((err)=>setErrors([...errors, err.errors]))\n                }\n            })\n        })\n        form.resetFields()\n    }\n    return (\n        <div id=\"newtab\">\n            <Form\n            form={form}\n            layout=\"vertical\"\n            wrapperCol={{span: 13,}}\n            onFinish={handleSubmit}\n            >\n                <Form.Item\n                    label=\"Tab Name\"\n                    name=\"name\"\n                    rules={[\n                    {\n                        required: true,\n                        message: 'Please input new tab name!',\n                    },\n                    ]}\n                >\n                    <Input onChange={handleInputChange} size=\"large\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Participants\"\n                    name=\"participants\"\n                    rules={[\n                    {\n                        required: true,\n                        message: 'Please select tab participants!',\n                    },\n                    ]}\n                >\n                    <DebounceSelect\n                        mode=\"multiple\"\n                        value={value}\n                        placeholder=\"Select users\"\n                        fetchOptions={fetchUserList}\n                        onChange={(newValue) => {\n                            setValue(newValue);\n                        }}\n                    />\n                </Form.Item>\n                <Button htmlType=\"submit\" size=\"large\">\n                    Submit\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default NewTab","\n\nfunction CompletedTabCard({ tab, user }) {\n\n    let expenses = []\n    tab.users.forEach(user => {\n        let useritems = tab.items.filter(item=>{\n            return (item.user_id===user.id)\n        })\n        let exp = useritems.reduce(function (acc, item) { return acc+item.price},0).toFixed(2)\n        expenses.push({\n            name: user.full_name,\n            expense: exp\n        })\n    });\n    let myExp = expenses.find(u=>{\n        return (u.name===user.full_name)\n    }).expense\n\n    let otherExp = expenses.filter(e=>{\n        return e.name!==user.full_name\n    })\n\n    function payment() {\n        return otherExp.map((exp)=>{\n            if (exp.expense-myExp>=0) {\n                return (<p>You owe {exp.name} ${((exp.expense-myExp)/expenses.length).toFixed(2)}</p>)\n            } else {\n                return (<p>{exp.name} will pay you ${((myExp-exp.expense)/expenses.length).toFixed(2)}</p>)\n            }\n        })\n    }\n\n    console.log(expenses)\n\n    return (\n        <>\n            {payment()}\n        </>\n    )\n}\n\nexport default CompletedTabCard","import { useEffect, useState } from \"react\"\nimport { Collapse, message } from 'antd';\nimport CompletedTabCard from \"./CompletedTabCard\";\n\nfunction CompletedTabs({ user }) {\n    const { Panel } = Collapse;\n    const [tabs, setTabs] = useState([])\n\n    useEffect(()=>{\n        fetch('/api/tabs').then(r=>r.json()).then(data=>{\n            let incomplete_tabs = data.filter(tab=>{\n                return tab.completed===true\n            })\n            setTabs(incomplete_tabs)\n        })\n    },[])\n\n\n\n    return(\n        <div id=\"currenttabs\">\n            <Collapse>\n                {tabs.map(tab=>{\n                    return (\n                    <Panel id=\"completedPanel\" header={tab.name} key={tab.id}>\n                        <CompletedTabCard tab={tab} user={user} />\n                    </Panel>)\n                })}\n            </Collapse>\n        </div>\n    )\n}\n\nexport default CompletedTabs","import { Layout, Menu} from 'antd';\nimport { SmileOutlined } from '@ant-design/icons';\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport CurrentTabs from './CurrentTabs';\nimport NewTab from './NewTab';\nimport CompletedTabs from './CompletedTabs';\n\nconst { Header, Content, Sider } = Layout;\n\nfunction Dashboard({ setUser, user }) {\n    function handleLogoutClick() {\n        fetch(\"/api/logout\", { method: \"DELETE\" }).then((r) => {\n          if (r.ok) {\n            setUser(null);\n          }\n        })}\n    return (\n        <Layout className=\"box\">\n            <Header className=\"header\" >\n                <h1>Tab-Tab-Tab</h1>\n            </Header>\n            <Layout>\n                <Sider width={300} id=\"sidebar\">\n                    <Menu\n                    mode=\"inline\"\n                    >\n                        <Menu.Item key={0} disabled icon={<SmileOutlined />}>Hello, {user.full_name}</Menu.Item>\n                        <Menu.Item key={1}>\n                            <Link to=\"/\">\n                                Current Tabs\n                            </Link>\n                        </Menu.Item>\n                        <Menu.Item key={2}>\n                            <Link to=\"/new\">\n                                Start New Tab\n                            </Link>\n                        </Menu.Item>\n                        <Menu.Item key={3}>\n                            <Link to=\"/archieves\">\n                                Completed Tabs\n                            </Link>\n                        </Menu.Item>\n                        <Menu.Item key={4} onClick={handleLogoutClick}>Logout</Menu.Item>\n                    </Menu>\n                </Sider>\n            <Layout>\n                <Content id='content'>\n                    <Routes>\n                        <Route path=\"/\" element={<CurrentTabs user={user} />}></Route>\n                        <Route path=\"/new\" element={<NewTab curr_user={user} />}></Route>\n                        <Route path=\"/archieves\" element={<CompletedTabs user={user} />}></Route>\n                    </Routes>\n                </Content>\n            </Layout>\n            </Layout>\n        </Layout>\n    )\n}\n\nexport default Dashboard","import React, { useEffect, useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport Landing from \"./Landing\";\nimport Dashboard from \"./Dashboard\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    // auto-login\n    fetch(\"/api/me\").then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      }\n    });\n  }, []);\n\n  if (!user) return (\n    <div className=\"App\">\n      <Landing onLogin={setUser} />\n    </div>\n  )\n  return (\n    <div className=\"App\">\n      <Dashboard setUser={setUser} user={user} />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './components/App';\nimport 'animate.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}